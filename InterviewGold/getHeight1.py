# -*- coding:utf-8 -*-

class myStack:
    #找出以元素i结尾的最长递增子序列
    #每一次为ｉ进行分配时，要检查前面所有的算法ai(i<x)
    #若ai小于ax，则说明ax可以跟在ai后形成一个新的递增子序列
    #否则，以ax结尾的递增子序列的最长长度为1
    def getHeight(self, men, n):
        longest = {}    #c存一个子字典
        longest[0] = 1
        for i in range(1, len(men)):
            maxlen = -1
            for j in range(0, i):
                if men[i]>men[j] and maxlen<longest[j]:
                    maxlen = longest[j]
            if maxlen>=1:    #说明之前的递增序列中，有ax可以跟的
                longest[i] = maxlen +1
            else:
                longest[i] = 1
        return max(longest.values())

if __name__=="__main__":
    find = myStack()
    list = [1092087,253439,1229092,2638575,2592914,1545673,2357912,1464954,1482904,2115048,1039606,3019682,2499687,2603974,235944,2029011,2594318,26817,2530237,2653234,1518368,102504,751515,1273453,252197,2328429,114699,833494,2437962,1897327,2358947,728206,1694538,1111877,2304261,1550585,2795216,1128077,2526780,2408154,1675787,1569084,542965,864374,2005718,2162685,562828,1806478,489256,643066,2684533,2308573,1242746,663914,893865,1350619,920645,706738,2053610,2975455,803894,37303,108282,78804,97230,2172571,1461268,2662562,597858,1434826,1379291,2481759,671296,489579,1997678,1361658,1793206,2500057,2428656,2228999,2758410,1766219,119904,2336578,1806119,1552636,1475687,1859500,773279,882156,286334,2887969,1579820,2178007,1736233,2042787,1545966,1657224,2524335,477841,256167,973209,2432626,564747,1915507,933567,2478598]
    length = 107
    print(find.getHeight(list, length))
